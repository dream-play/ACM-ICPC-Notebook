//Current interval starting from curl+1 to curr

#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d", &x)
#define boost ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define all(a) a.begin(), a.end()
#define f first
#define s second

typedef pair<int, int> pii;
typedef long long ll;

const int mod = 1000000007;
const int inf = 50000000;
const int maxn = 1000010;
const int block = 500;

char str[maxn];

struct query{
	int l, r, bno, qno;
	bool operator<(const query &q) const{
		if(bno==q.bno)
			return r<q.r;
		return bno<q.bno;
	}
};

query q[maxn];
int ans[maxn];

int add(int cur)
{
	
}

int remove(int cur)
{
	
}

int main()
{
	//freopen("i.txt", "r", stdin);
	//freopen("o.txt", "w", stdout);
	int i, n, m, a, b, ind, curl, curr, ret = 0;
	scanf("%s%d", str+1, &m);
	n = strlen(str+1);
	for(i=1; i<=m; i++){
		scanf("%d%d", &q[i].l, &q[i].r);
		q[i].bno = q[i].l/block;
		q[i].qno = i;
	}
	sort(q+1, q+m+1);
	curl = curr = 0;
	for(i=1; i<=m; i++){
		a = q[i].l;
		b = q[i].r;
		ind = q[i].qno;
		while(curl+1<a){
			ret-=remove(curl+1);
			curl++;
		}
		while(curl>=a){
			ret+=add(curl);
			curl--;
		}
		while(curr+1<=b){
			ret+=remove(curr+1);
			curr++;
		}
		while(curr>b){
			ret-=add(curr);
			curr--;
		}
		ans[ind] = ret;
	}
	for(i=1; i<=m; i++)
		printf("%d\n", ans[i]);
	return 0;
}

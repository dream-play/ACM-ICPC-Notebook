#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007
#define inf 1000000000
#define maxn 1000000

#define ll long long
#define pii pair<int, int>
#define pb push_back
#define sin scanint
#define sll scanll
#define fill(s, p) memset(s, p, sizeof(s));

#ifdef ONLINE_JUDGE
#define gc getchar_unlocked
#endif

#ifndef ONLINE_JUDGE
#define gc getchar
//freopen("input.txt", "r", stdin)
//freopen("output.txt", "w", stdout)
#endif

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

void scanll(ll &x)
{
    register ll c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

ll modpow(ll a, ll b)
{
	ll x=1ll, y=a;
	while(b){
		if(b%2)
			x=(x*y)%MOD;
		y=(y*y)%MOD;
		b/=2;
	}
	return x;
}

ll gcd(ll a, ll b)
{
	if(a%b==0)
		return b;
	else
		return gcd(b, a%b);
}

string getHashedStr(char *s)
{
	int i, len;
	len = strlen(s);
	string ret ="";
	for(i=0; i<len; i++){
		ret+='#';
		ret+=s[i];
	}
	ret+='#';
	return ret;
}

int main()
{
	int t, n, i, j, center, right, i_mirror;
	char str[maxn];
	string hashedStr;
	//sin(t);
	//while(t--){
		scanf("%d%s", &n, str);
		hashedStr = getHashedStr(str);
		//cout << hashedStr << endl;
		n = hashedStr.size();
		int p[n]; 
		center = right = 0;
		for(i=0; i<n; i++){
			p[i] = (right>i)?min(right-i, p[center*2 - i]):1;
			while((i+p[i])<n && (i-p[i])>=0 && hashedStr[i+p[i]]==hashedStr[i-p[i]])
				p[i]++;
			if(right<(i+p[i])){
				center = i;
				right = i+p[i];
			}
		}
		int maxcnt, maxlps;
		maxcnt = maxlps = 0;
		for(i=0; i<n; i++){
			//cout << p[i] << " ";
			if(p[i]>maxlps){
				maxlps = p[i];
				//maxcnt = 1;
			}
		//	else if(p[i]==maxlps)
		//		maxcnt++;
		}
		//cout << endl;
		printf("%d\n", (maxlps-1));
	//}
	return 0;
}
